# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Login Azure Account
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: GitHubActionsTestAKS
          resource-group: GitHubActionsTest

      #      - run: |
      #          kubectl create namespace github-actions-test-namespace

      - run: |
          kubectl apply -f pod.yaml

      - name: Check Java version
        if: always()
        run: java -version

      - name: Build Project
        run: |
          gradle build

      - name: Check Docker version
        run: |
          docker -v
          docker

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker Images
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_TAG

      - name: Tag Docker Images(Shortened)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${GITHUB_SHA::8} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${GITHUB_SHA::8}

      - name: Use Github ENV Var
        run: |
          echo "SHORTEN_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo $GITHUB_ENV

      - name: Build & Publish Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/$SHORTEN_SHA:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/$SHORTEN_SHA:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/$SHORTEN_SHA:buildcache,mode=max

